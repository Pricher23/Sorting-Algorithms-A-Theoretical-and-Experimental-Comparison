import random
import time

def insertion_sort(data):
  """Sorts a list using insertion sort algorithm.

  Args:
      data: The list to be sorted.

  Returns:
      The sorted list.
  """
  n = len(data)
  for i in range(1, n):
    key = data[i]
    j = i - 1

    # Move elements of arr[0..i-1], that are greater than key, to one position ahead
    # of their current position
    while j >= 0 and key < data[j]:
      data[j + 1] = data[j]
      j -= 1
    data[j + 1] = key
  return data

def main():
  data = [random.randint(1, 100000) for _ in range(1000)]

  # Start time measurement
  start_time = time.perf_counter()

  # Sort the list
  sorted_data = insertion_sort(data.copy())  # Avoid modifying original list

  # End time measurement
  end_time = time.perf_counter()

  # Calculate execution time
  elapsed_time = end_time - start_time

  print(f"Time taken to sort {len(data)} elements using insertion sort: {elapsed_time:.4f} seconds")

if __name__ == "__main__":
  main()
